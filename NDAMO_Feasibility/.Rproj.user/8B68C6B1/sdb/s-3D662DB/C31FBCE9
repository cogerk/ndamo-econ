{
    "collab_server" : "",
    "contents" : "# TODO: Change control scheme\n\ndelN <- .25\ndelC <- 5\nN_vector <- seq(5, 50, delN)\nCOD_vector <- seq(50, 300, delC)\nflowrate <- 20 # In Million Liters/Day\npH <- 7 # No effect currently\nTemp <- 20 # No effect currently\n\n\nfor(i in N_vector){\n  for(j in COD_vector){\n    D_New_Results = anamx_NDAMO_AnMBR(flowrate, pH, Temp, i, j)\n    C_New_Results = anamx_NDAMO(flowrate, pH, Temp, i, j)\n    B_New_Results = anamx(flowrate, pH, Temp, i, j)\n    A_New_Results = nit_denit(flowrate, pH, Temp, i, j)\n    if(j == COD_vector[1] & i == N_vector[1]) {\n      D_Results <- D_New_Results\n      C_Results <- C_New_Results\n      B_Results <- B_New_Results\n      A_Results <- A_New_Results\n    } else {\n      D_Results <- rbind(D_Results, D_New_Results)\n      C_Results <- rbind(C_Results, C_New_Results)\n      B_Results <- rbind(B_Results, B_New_Results)\n      A_Results <- rbind(A_Results, A_New_Results)\n      print(i)\n      print(j)\n      }\n  }\n}\n\nD_CH4_Cons <- matrix(D_Results$fCH4_cons*100, length(COD_vector),length(N_vector))\n\nD_px_TOT <- matrix((D_Results$px_TOT-A_Results$px_TOT)/1000, length(COD_vector),length(N_vector))\nD_O2_dem <- matrix((D_Results$O2_dem-A_Results$O2_dem)/1000, length(COD_vector),length(N_vector))\nD_LCH4gas <-matrix((D_Results$LCH4gas-A_Results$LCH4gas)/1000, length(COD_vector),length(N_vector))\n\nC_CH4_Cons <- matrix(C_Results$fCH4_cons*100, length(COD_vector),length(N_vector))\n\nC_px_TOT <- matrix((C_Results$px_TOT-A_Results$px_TOT)/1000, length(COD_vector),length(N_vector))\nC_O2_dem <- matrix((C_Results$O2_dem/1000-A_Results$O2_dem), length(COD_vector),length(N_vector))\nC_LCH4gas <-matrix(C_Results$LCH4gas/1000, length(COD_vector),length(N_vector))\n\nB_px_TOT <- matrix((B_Results$px_TOT-A_Results$px_TOT)/1000, length(COD_vector),length(N_vector))\nB_O2_dem <- matrix((B_Results$O2_dem-A_Results$O2_dem)/1000, length(COD_vector),length(N_vector))\nB_LCH4gas <-matrix((B_Results$LCH4-gasA_Results$LCH4gas)/1000, length(COD_vector),length(N_vector))\n\nA_px_TOT <- matrix(A_Results$px_TOT/1000, length(COD_vector),length(N_vector))\nA_O2_dem <- matrix(A_Results$O2_dem/1000, length(COD_vector),length(N_vector))\nA_LCH4gas <-matrix(A_Results$LCH4gas/1000, length(COD_vector),length(N_vector))\n\nA_COD_added <- matrix(A_Results$COD_added/1000, length(COD_vector),length(N_vector))\n\nget_cscale <- function(ident){\n  if (ident=='CH4_Cons'){\n    suf <- '%'\n    C_max <- max(C_CH4_Cons)\n    C_min <- min(C_CH4_Cons)\n    D_max <- max(D_CH4_Cons)\n    D_min <- min(D_CH4_Cons)\n    A_max <- C_max\n    A_min <- C_min\n    B_max <- C_max\n    B_min <- C_min\n    } else if (ident=='px_TOT'){\n    suf <- ''\n    A_max <- max(A_px_TOT)\n    A_min <- min(A_px_TOT)\n    B_max <- max(B_px_TOT)\n    B_min <- min(B_px_TOT)\n    C_max <- max(C_px_TOT)\n    C_min <- min(C_px_TOT)\n    D_max <- max(D_px_TOT)\n    D_min <- min(D_px_TOT)\n  } else if (ident=='O2_dem'){\n    suf <- ''\n    A_max <- max(A_O2_dem)\n    A_min <- min(A_O2_dem)\n    B_max <- max(B_O2_dem)\n    B_min <- min(B_O2_dem)\n    C_max <- max(C_O2_dem)\n    C_min <- min(C_O2_dem)\n    D_max <- max(D_O2_dem)\n    D_min <- min(D_O2_dem)\n  } else if (ident=='LCH4gas'){\n    suf <- ''\n    A_max <- max(A_LCH4gas)\n    A_min <- min(A_LCH4gas)\n    B_max <- max(B_LCH4gas)\n    B_min <- min(B_LCH4gas)\n    C_max <- max(C_LCH4gas)\n    C_min <- min(C_LCH4gas)\n    D_max <- max(D_LCH4gas)\n    D_min <- min(D_LCH4gas)\n  } else if (ident=='COD_added'){\n    suf <- ''\n    A_max <- max(A_COD_added)\n    A_min <- min(A_COD_added)\n    B_max <- A_max\n    B_min <- A_min\n    C_max <- A_max\n    C_min <- A_min\n    D_max <- A_max\n    D_min <- A_min\n  }\n    zmaxval <- max(A_max, B_max, C_max, D_max)\n    zminval <- min(A_min, B_min, C_min, D_min)\n    return(list(zminval,zmaxval,suf))\n}\n\nlibrary(plotly)\nf <- list(\n  family = \"Courier New, monospace\",\n  size = 18,\n  color = \"#7f7f7f\"\n)\nx <- list(\n  title = \"Influent Nitrogen Concentration, mgN/L\"\n)\ny <- list(\n  title = \"Influent COD Concentration, mg/L\"\n)\n\n\nCH4_Cons_formatter <- get_cscale('CH4_Cons')\npx_TOT_formatter <- get_cscale('px_TOT')\nO2_dem_formatter <- get_cscale('O2_dem')\nLCH4gas_formatter <- get_cscale('LCH4gas')\nCOD_added_formatter <- get_cscale('COD_added')\n\n\npC_CH4_cons <- plot_ly(z = C_CH4_Cons, \n                       x=N_vector, \n                       y=COD_vector, \n                       zmin = CH4_Cons_formatter[[1]],\n                       zmax = CH4_Cons_formatter[[2]],\n                       colorbar = list(ticksuffix=CH4_Cons_formatter[3],\n                                       title = \"\"),\n                       type = \"heatmap\") %>%\n  layout(xaxis = x, yaxis = y, title='Scenario C: % CH4 Consumed by NDAMO')\npD_CH4_cons <- plot_ly(z = D_CH4_Cons, \n                       x = N_vector, \n                       zmin = CH4_Cons_formatter[[1]],\n                       zmax = CH4_Cons_formatter[[2]],\n                       colorbar = list(ticksuffix=CH4_Cons_formatter[3],\n                                       title = \"\"),\n                       y=COD_vector, type = 'heatmap') %>%\n  layout(xaxis = x, yaxis = y, title='Scenario D: % CH4 Consumed by NDAMO')\n# Don't Print, too obvi\n#print(pC_CH4_cons)\n#print(pD_CH4_cons)\n\npB_px_tot <- plot_ly(z = B_px_TOT, \n                     x=N_vector, \n                     y=COD_vector, \n                     type = \"heatmap\", \n                     zmin = px_TOT_formatter[[1]],\n                     zmax = px_TOT_formatter[[2]],\n                     colorbar = list(ticksuffix=px_TOT_formatter[3],\n                                     title = \"\")) %>%\n  layout(xaxis = x, yaxis = y, zaxis =list(range=z_px_TOT), title='Metric Tons Sludge Produced per Year Scenario B vs. Scenario A')\npC_px_tot <- plot_ly(z = C_px_TOT, \n                     x=N_vector, \n                     y=COD_vector, \n                     type = \"heatmap\", \n                     zmin = px_TOT_formatter[[1]],\n                     zmax = px_TOT_formatter[[2]],\n                     colorbar = list(ticksuffix=px_TOT_formatter[3],\n                                     title = \"\")) %>%\n  layout(xaxis = x, yaxis = y, zaxis =list(range=z_px_TOT), title='Metric Tons Sludge Produced per Year Scenario C vs. Scenario A')\npD_px_tot <- plot_ly(z = D_px_TOT, \n                     x=N_vector, \n                     y=COD_vector, \n                     type = \"heatmap\", \n                     zmin = px_TOT_formatter[[1]],\n                     zmax = px_TOT_formatter[[2]],\n                     colorbar = list(ticksuffix=px_TOT_formatter[3],\n                                     title = \"\")) %>%\n  layout(xaxis = x, yaxis = y, title='Scenario D: Metric Tons Sludge Produced per Year  Scenario D vs. Scenario A')\n\n#print(pA_px_tot) #we compare everything to A now\nprint(pB_px_tot)\nprint(pC_px_tot)\nprint(pD_px_tot)\n\npB_O2_dem <- plot_ly(z = B_O2_dem, \n                     x=N_vector, \n                     y=COD_vector, \n                     type = \"heatmap\", \n                     zmin = O2_dem_formatter[[1]],\n                     zmax = O2_dem_formatter[[2]],\n                     colorbar = list(ticksuffix=O2_dem_formatter[3],\n                                     title = \"\")) %>%\n  layout(xaxis = x, yaxis = y, title='Daily O2 Demand in Metric Tons  Scenario B vs. Scenario A')\npC_O2_dem <- plot_ly(z = C_O2_dem, \n                     x=N_vector, \n                     y=COD_vector, \n                     type = \"heatmap\", \n                     zmin = O2_dem_formatter[[1]],\n                     zmax = O2_dem_formatter[[2]],\n                     colorbar = list(ticksuffix=O2_dem_formatter[3],\n                                     title = \"\")) %>%\n  layout(xaxis = x, yaxis = y, title='Daily O2 Demand in Metric Tons  Scenario C vs. Scenario A')\npD_O2_dem <- plot_ly(z = D_O2_dem, \n                     x=N_vector, \n                     y=COD_vector, \n                     type = \"heatmap\", \n                     zmin = O2_dem_formatter[[1]],\n                     zmax = O2_dem_formatter[[2]],\n                     colorbar = list(ticksuffix=O2_dem_formatter[3],\n                                     title = \"\")) %>%\n  layout(xaxis = x, yaxis = y, title='Daily O2 Demand in Metric Tons Scenario D vs. Scenario A')\n#print(pA_O2_dem) #we compare everything to A now\nprint(pB_O2_dem)\nprint(pC_O2_dem)\nprint(pD_O2_dem)\n\npA_Methane <- plot_ly(z = A_LCH4gas, \n                      x=N_vector, \n                      y=COD_vector, \n                      type = \"heatmap\", \n                      zmin = LCH4gas_formatter[[1]],\n                      zmax = LCH4gas_formatter[[2]],\n                      colorbar = list(ticksuffix=LCH4gas_formatter[3],\n                                      title = \"\")) %>%\n  layout(xaxis = x, yaxis = y, title='Scenario A: Daily Methane for Energy Recovery in Metric Tons ')\npB_Methane <- plot_ly(z = B_LCH4gas, \n                      x=N_vector, \n                      y=COD_vector, \n                      type = \"heatmap\", \n                      zmin = LCH4gas_formatter[[1]],\n                      zmax = LCH4gas_formatter[[2]],\n                      colorbar = list(ticksuffix=LCH4gas_formatter[3],\n                                      title = \"\")) %>%\n  layout(xaxis = x, yaxis = y, title='Daily Methane for Energy Recovery in Metric Tons Scenario B vs. Scenario A')\npC_Methane <- plot_ly(z = C_LCH4gas, \n                      x=N_vector, \n                      y=COD_vector, \n                      type = \"heatmap\", \n                      zmin = LCH4gas_formatter[[1]],\n                      zmax = LCH4gas_formatter[[2]],\n                      colorbar = list(ticksuffix=LCH4gas_formatter[3],\n                                      title = \"\")) %>%\n  layout(xaxis = x, yaxis = y, title='Daily Methane for Energy Recovery in Metric Tons Scenario C vs. Scenario A')\npD_Methane <- plot_ly(z = D_LCH4gas, \n                      x=N_vector, \n                      y=COD_vector, \n                      type = \"heatmap\", \n                      zmin = LCH4gas_formatter[[1]],\n                      zmax = LCH4gas_formatter[[2]],\n                      colorbar = list(ticksuffix=LCH4gas_formatter[3],\n                                      title = \"\")) %>%\n  layout(xaxis = x, yaxis = y, title='Daily Methane for Energy Recovery in Metric Tons  Scenario D vs. Scenario A')\n#print(pA_Methane) #we compare everything to A now\nprint(pB_Methane)\nprint(pC_Methane)\nprint(pD_Methane)\n\npA_COD_added <- plot_ly(z = A_COD_added, \n                      x=N_vector, \n                      y=COD_vector, \n                      type = \"heatmap\", \n                      zmin = COD_added_formatter[[1]],\n                      zmax = COD_added_formatter[[2]],\n                      colorbar = list(ticksuffix=COD_added_formatter[3],\n                                      title = \"\")) %>%\n  layout(xaxis = x, yaxis = y, title='Scenario A: Daily COD Addition Required in Metric Tons')\nprint(pA_COD_added) #Ammount of COD req'd in scenario A, maybe do we need this I don't know...\n",
    "created" : 1472831402296.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "378960725",
    "id" : "C31FBCE9",
    "lastKnownWriteTime" : 1473272850,
    "last_content_update" : 1473272966873,
    "path" : "~/Reference/ndamo-econ/NDAMO_Feasibility/GraphScenarios.R",
    "project_path" : "GraphScenarios.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}